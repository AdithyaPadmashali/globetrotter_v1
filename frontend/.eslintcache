[{"/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/index.js":"1","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/App.js":"2","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/reportWebVitals.js":"3","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Components/Navbar.js":"4","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Landing.js":"5","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Signup.js":"6","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Signin.js":"7","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Home.js":"8","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Inbox.js":"9","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Friends.js":"10","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/PostDestination.js":"11","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Profile.js":"12","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/UserDetails.js":"13","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Chat.js":"14","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Reducer/UserReducer.js":"15","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Components/Card.js":"16","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Form.js":"17"},{"size":500,"mtime":1610767449090,"results":"18","hashOfConfig":"19"},{"size":2149,"mtime":1610817461418,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1610767449090,"results":"21","hashOfConfig":"19"},{"size":1615,"mtime":1610767449086,"results":"22","hashOfConfig":"19"},{"size":427,"mtime":1610767449090,"results":"23","hashOfConfig":"19"},{"size":2738,"mtime":1610767449090,"results":"24","hashOfConfig":"19"},{"size":2675,"mtime":1610767449090,"results":"25","hashOfConfig":"19"},{"size":1697,"mtime":1610767449086,"results":"26","hashOfConfig":"19"},{"size":1760,"mtime":1610767449090,"results":"27","hashOfConfig":"19"},{"size":1906,"mtime":1610767449086,"results":"28","hashOfConfig":"19"},{"size":3083,"mtime":1610960835966,"results":"29","hashOfConfig":"19"},{"size":1602,"mtime":1610767449090,"results":"30","hashOfConfig":"19"},{"size":1698,"mtime":1610767449090,"results":"31","hashOfConfig":"19"},{"size":1557,"mtime":1610767449086,"results":"32","hashOfConfig":"19"},{"size":229,"mtime":1610767449086,"results":"33","hashOfConfig":"19"},{"size":3863,"mtime":1611412572488,"results":"34","hashOfConfig":"19"},{"size":1187,"mtime":1610992126545,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"jc1zlx",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},"/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/index.js",[],["76","77"],"/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/App.js",["78"],"import \"./App.css\";\nimport { useContext, useReducer, createContext, useEffect } from \"react\";\nimport Navbar from \"./Components/Navbar\";\nimport Landing from \"./Screens/Landing\";\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport Signup from \"./Screens/Signup\";\nimport Signin from \"./Screens/Signin\";\nimport Home from \"./Screens/Home\";\nimport Inbox from \"./Screens/Inbox\";\nimport Friends from \"./Screens/Friends\";\nimport Form from \"./Screens/Form\"\nimport { reducer, initialState } from \"./Reducer/UserReducer\";\nimport PostDestination from \"./Screens/PostDestination\";\nimport Profile from \"./Screens/Profile\";\nimport UserDetails from \"./Screens/UserDetails\";\nimport Chat from \"./Screens/Chat\";\n\nexport const UserContext = createContext();\n\nfunction Routes() {\n  const history = useHistory();\n  const { dispatch } = useContext(UserContext);\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      dispatch({ type: \"USER\", payload: user });\n    } else {\n      history.push(\"/\");\n    }\n  }, []);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Landing}></Route>\n      <Route exact path=\"/signup\" component={Signup}></Route>\n      <Route exact path=\"/signin\" component={Signin}></Route>\n      <Route exact path=\"/home\" component={Home}></Route>\n      <Route exact path=\"/postdestination\" component={PostDestination}></Route>\n      <Route exact path=\"/viewprofile\" component={Profile}></Route>\n      <Route exact path=\"/inbox\" component={Inbox}></Route>\n      <Route exact path=\"/friendlist\" component={Friends}></Route>\n      <Route exact path=\"/userdetails/:id\" component={UserDetails}></Route>\n      <Route path=\"/chat\" component={Chat}></Route>\n      <Route exact path = \"/form\" component={Form}></Route>\n    </Switch>\n  );\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div className=\"\">\n      <UserContext.Provider value={{ state, dispatch }}>\n        <BrowserRouter>\n          <Navbar />\n          <Routes />\n        </BrowserRouter>\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/reportWebVitals.js",[],"/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Components/Navbar.js",[],"/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Landing.js",[],"/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Signup.js",[],"/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Signin.js",["79"],"import React, { useState, useContext } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { UserContext } from '../App'\n\nfunction Signin() {\n\n    const history = useHistory()\n    const { state, dispatch } = useContext(UserContext)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [type, setType] = useState('password')\n\n    const togglePassword = () => {\n        if (type === \"password\") {\n            setType('text')\n        } else {\n            setType('password')\n        }\n    }\n\n    const clicked = () => {\n        fetch('http://localhost:5000/api/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email, password })\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) {\n                    console.log(res.error)\n                }\n                else {\n                    localStorage.setItem('jwt', res.token)\n                    localStorage.setItem('user', JSON.stringify(res.user))\n                    console.log(res)\n                    dispatch({ type: 'USER', payload: res.user })\n                    history.push('/home')\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    const style = {\n        textAlign: 'center',\n        maxWidth: '400px',\n        marginLeft: '20px',\n        borderRadius: '10px',\n        padding: '30px',\n        backgroundColor: '#444',\n        color: 'white'\n    }\n\n    return (\n        <div style={{ display: 'flex', margin: '10px auto', justifyContent: 'center' }}>\n            <div className='card' style={style}>\n                <h2>GlobeTrotter</h2>\n                <h4>Sign In</h4>\n                <input style={{ color: \"white\" }} type=\"text\" placeholder='Enter your Email' value={email} onChange={(e) => setEmail(e.target.value)}></input>\n                <input style={{ color: \"white\" }} type={type} id=\"passwrd\" placeholder='Enter your Password' value={password} onChange={(e) => setPassword(e.target.value)}></input><br /><br />\n                <div style={{ color: 'white' }} onClick={() => togglePassword()}>\n                    Click here to show/hide Password\n                </div>\n                <br></br><br></br>\n                <button onClick={() => clicked()} className=\"waves-effect waves-light btn\">Sign In</button><br /><br />\n                Don't have an account? <br></br>\n                <Link to='/signup'>Sign Up here!</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Signin","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Home.js",["80","81"],"import { React, useEffect, useContext, useState } from \"react\";\nimport { UserContext } from \"../App\";\nimport Card from \"../Components/Card\";\n\nfunction Home() {\n  const [dests, setDests] = useState([]);\n  const { state, dispatch } = useContext(UserContext);\n  // const [friendList, setFriendList] = useState([]);\n\n  function getFriendlist() {\n    fetch(\"http://localhost:5000/api/users/friend\", {\n      method: \"GET\",\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n        uid: JSON.parse(localStorage.getItem(\"user\"))._id.toString(),\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        // setFriendList(res);\n        localStorage.setItem(\"friends\", res)\n      })\n      .catch((err) => console.log(err));\n  }\n  useEffect(() => {\n    getFriendlist()\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/posts\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.getItem(\"jwt\"),\n        id: JSON.parse(localStorage.getItem(\"user\"))._id.toString(),\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setDests(res);\n      })\n      .catch((err) => alert(\"somettext\"));\n  }, []);\n  return (\n    <div>\n      {\n        dests.map((d) => {\n          return (\n            <Card\n              key={d._id}\n              user={d.user}\n              fid={d.user._id}\n              destination={d.destination}\n              description={d.description}\n              name={d.user.name}\n              url={d.image_url}\n            />\n          );\n        })\n      }\n    </div >\n\n  );\n}\n\nexport default Home;\n","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Inbox.js",[],"/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Friends.js",[],"/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/PostDestination.js",[],"/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Profile.js",[],"/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/UserDetails.js",[],"/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Chat.js",["82","83"],"import React, { useState, useEffect } from 'react'\nimport queryString from 'query-string'\nimport io from 'socket.io-client'\n\nlet socket\n\nfunction Chat({ location }) {\n\n    const [name, setName] = useState('')\n    const [room, setRoom] = useState('')\n    const [message, setMessage] = useState('')\n    const [messages, setMessages] = useState([])\n    const ENDPOINT = 'http://localhost:5000'\n\n    useEffect(() => {\n        const { name, room } = queryString.parse(location.search)\n        socket = io(ENDPOINT)\n        setName(name)\n        setRoom(room)\n\n        socket.emit('join', { name, room })\n\n        return () => {\n            socket.emit('disconnected')\n            socket.off()\n        }\n    }, [ENDPOINT, location.search])\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n            setMessages([...messages, message])\n        })\n    }, [messages])\n\n    const sendMessage = (e) => {\n\n        if (message) {\n            socket.emit('sendMessage', message, () => {\n                setMessage('')\n            })\n        }\n    }\n\n    console.log(message, messages)\n    return (\n        <div>\n            <div className=\"messagesContainer\">\n                {\n                    messages.map((m) => {\n                        return <div>{m.user + \" : \" + m.text}</div>\n                    })\n                }\n            </div>\n            <input type='text' onChange={(e) => setMessage(e.target.value)} />\n            <button type='submit' onClick={(e) => sendMessage(e)}>Send</button>\n        </div>\n    )\n}\n\nexport default Chat\n","/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Reducer/UserReducer.js",[],"/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Components/Card.js",[],"/home/abhi/Documents/streamr/globetrotter_v1/frontend/src/Screens/Form.js",["84","85","86","87","88","89"],"import React,{useState,useEffect} from 'react'\nconst StreamrClient = require('streamr-client')\n\nfunction Form(){\n\nconst [coins,setCoins] = useState()\n\nconst STREAM_ID = '0xcedd0024aa729244f33f13348e0bf7601f933fad/test_globetrotter'\nconst API = '206656bcf576be28697407f0b363d85b125bf5dc75baa0a19578aa6797f78064'\n\nconst [name,setName] = useState();\n\n\n\nconst clicked = () => {\n    fetch(\"http://localhost:5000/api/test/coins\", {\n      method: \"POST\",\n      headers: {\n        \"privatekey\" : (JSON.parse(localStorage.getItem('user')).privateKey).toString()\n      }\n    }).then(res => res.json()).then((data) => {\n      console.log(data)\n      setCoins(data.coins)\n    })\n  }\n\n  const withdraw = () => {\n    fetch(\"http://localhost:5000/api/test/withdraw\", {\n      method: \"GET\",\n      headers: {\n        \"privatekey\" : (JSON.parse(localStorage.getItem('user')).privateKey).toString()\n      }\n    })\n  }\n\nreturn(\n    <div>\n      <br></br>\n        <button type=\"submit\" onClick={()=>clicked()}>SHOW EARNINGS</button>\n        <br></br><br></br>\n        DATA COINS : {coins}\n        &nbsp;&nbsp;&nbsp;<button onClick={()=>withdraw()}>WITHDRAW COINS</button>\n    </div>\n)\n\n\n}\n\nexport default Form",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":30,"column":6,"nodeType":"96","endLine":30,"endColumn":8,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":8,"column":13,"nodeType":"100","messageId":"101","endLine":8,"endColumn":18},{"ruleId":"98","severity":1,"message":"99","line":7,"column":11,"nodeType":"100","messageId":"101","endLine":7,"endColumn":16},{"ruleId":"98","severity":1,"message":"102","line":7,"column":18,"nodeType":"100","messageId":"101","endLine":7,"endColumn":26},{"ruleId":"98","severity":1,"message":"103","line":9,"column":12,"nodeType":"100","messageId":"101","endLine":9,"endColumn":16},{"ruleId":"98","severity":1,"message":"104","line":10,"column":12,"nodeType":"100","messageId":"101","endLine":10,"endColumn":16},{"ruleId":"98","severity":1,"message":"105","line":1,"column":24,"nodeType":"100","messageId":"101","endLine":1,"endColumn":33},{"ruleId":"98","severity":1,"message":"106","line":2,"column":7,"nodeType":"100","messageId":"101","endLine":2,"endColumn":20},{"ruleId":"98","severity":1,"message":"107","line":8,"column":7,"nodeType":"100","messageId":"101","endLine":8,"endColumn":16},{"ruleId":"98","severity":1,"message":"108","line":9,"column":7,"nodeType":"100","messageId":"101","endLine":9,"endColumn":10},{"ruleId":"98","severity":1,"message":"103","line":11,"column":8,"nodeType":"100","messageId":"101","endLine":11,"endColumn":12},{"ruleId":"98","severity":1,"message":"109","line":11,"column":13,"nodeType":"100","messageId":"101","endLine":11,"endColumn":20},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["112"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'name' is assigned a value but never used.","'room' is assigned a value but never used.","'useEffect' is defined but never used.","'StreamrClient' is assigned a value but never used.","'STREAM_ID' is assigned a value but never used.","'API' is assigned a value but never used.","'setName' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [dispatch, history]",{"range":"115","text":"116"},[1063,1065],"[dispatch, history]"]