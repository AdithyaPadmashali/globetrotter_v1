[{"/home/kali/Desktop/globetrotter_v1/frontend/src/index.js":"1","/home/kali/Desktop/globetrotter_v1/frontend/src/reportWebVitals.js":"2","/home/kali/Desktop/globetrotter_v1/frontend/src/App.js":"3","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Landing.js":"4","/home/kali/Desktop/globetrotter_v1/frontend/src/Components/Navbar.js":"5","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Signup.js":"6","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Signin.js":"7","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Form.js":"8","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Home.js":"9","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/PostDestination.js":"10","/home/kali/Desktop/globetrotter_v1/frontend/src/Reducer/UserReducer.js":"11","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Chat.js":"12","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Inbox.js":"13","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Friends.js":"14","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Profile.js":"15","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/UserDetails.js":"16","/home/kali/Desktop/globetrotter_v1/frontend/src/Components/Card.js":"17"},{"size":500,"mtime":1611732561608,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1611732561608,"results":"20","hashOfConfig":"19"},{"size":2149,"mtime":1611733013552,"results":"21","hashOfConfig":"19"},{"size":1236,"mtime":1611754666763,"results":"22","hashOfConfig":"19"},{"size":1615,"mtime":1611732561604,"results":"23","hashOfConfig":"19"},{"size":2738,"mtime":1611732561608,"results":"24","hashOfConfig":"19"},{"size":2675,"mtime":1611732561608,"results":"25","hashOfConfig":"19"},{"size":1187,"mtime":1611733013576,"results":"26","hashOfConfig":"19"},{"size":1955,"mtime":1611738971079,"results":"27","hashOfConfig":"19"},{"size":3083,"mtime":1611733013576,"results":"28","hashOfConfig":"19"},{"size":229,"mtime":1611732561604,"results":"29","hashOfConfig":"19"},{"size":1557,"mtime":1611732561604,"results":"30","hashOfConfig":"19"},{"size":2625,"mtime":1611749398452,"results":"31","hashOfConfig":"19"},{"size":2927,"mtime":1611749398452,"results":"32","hashOfConfig":"19"},{"size":3696,"mtime":1611752005939,"results":"33","hashOfConfig":"19"},{"size":2872,"mtime":1611752017487,"results":"34","hashOfConfig":"19"},{"size":4089,"mtime":1611749398452,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1onpcl3",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kali/Desktop/globetrotter_v1/frontend/src/index.js",[],["80","81"],"/home/kali/Desktop/globetrotter_v1/frontend/src/reportWebVitals.js",[],"/home/kali/Desktop/globetrotter_v1/frontend/src/App.js",["82"],"import \"./App.css\";\nimport { useContext, useReducer, createContext, useEffect } from \"react\";\nimport Navbar from \"./Components/Navbar\";\nimport Landing from \"./Screens/Landing\";\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport Signup from \"./Screens/Signup\";\nimport Signin from \"./Screens/Signin\";\nimport Home from \"./Screens/Home\";\nimport Inbox from \"./Screens/Inbox\";\nimport Friends from \"./Screens/Friends\";\nimport Form from \"./Screens/Form\"\nimport { reducer, initialState } from \"./Reducer/UserReducer\";\nimport PostDestination from \"./Screens/PostDestination\";\nimport Profile from \"./Screens/Profile\";\nimport UserDetails from \"./Screens/UserDetails\";\nimport Chat from \"./Screens/Chat\";\n\nexport const UserContext = createContext();\n\nfunction Routes() {\n  const history = useHistory();\n  const { dispatch } = useContext(UserContext);\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      dispatch({ type: \"USER\", payload: user });\n    } else {\n      history.push(\"/\");\n    }\n  }, []);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Landing}></Route>\n      <Route exact path=\"/signup\" component={Signup}></Route>\n      <Route exact path=\"/signin\" component={Signin}></Route>\n      <Route exact path=\"/home\" component={Home}></Route>\n      <Route exact path=\"/postdestination\" component={PostDestination}></Route>\n      <Route exact path=\"/viewprofile\" component={Profile}></Route>\n      <Route exact path=\"/inbox\" component={Inbox}></Route>\n      <Route exact path=\"/friendlist\" component={Friends}></Route>\n      <Route exact path=\"/userdetails/:id\" component={UserDetails}></Route>\n      <Route path=\"/chat\" component={Chat}></Route>\n      <Route exact path = \"/form\" component={Form}></Route>\n    </Switch>\n  );\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div className=\"\">\n      <UserContext.Provider value={{ state, dispatch }}>\n        <BrowserRouter>\n          <Navbar />\n          <Routes />\n        </BrowserRouter>\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Landing.js",["83","84","85","86"],"import React from 'react';\nimport img1 from './Assets/1.png'\nimport img2 from './Assets/2.png'\nimport img3 from './Assets/3.png'\n\n\nconst jumbotronStyle = {\n    paddingBottom: '150px',\n    boxShadow: \"0px 0px 0px 0px rgba(0,0,0,0)\"\n}\n\nconst Landing = () => {\n    return (\n        <div>\n            <img src={img1} style={{ width: \"100%\", marginLeft: \"0%\" }}></img>\n            <div style={{ marginTop: \"0%\" }}>\n                <img src={img2} style={{ width: \"80%\" }}></img>\n                <img src={img3} style={{ width: \"80%\", marginLeft: \"20%\" }}></img>\n            </div>\n            <hr />\n            <div style={{ textAlign: \"center\" }}>\n                NOTE - The following data will be collected in each of your sessions (i.e, Everytime a post is created or liked):\n                <ul>\n                    <li>\n                        Your Dream destination\n            </li>\n                    <li>\n                        Your Country of Origin\n            </li>\n                    <li>\n                        The Destinations you liked\n            </li>\n                    <li>\n                        Your Age\n            </li>\n                </ul>\n            </div>\n        </div >\n    );\n}\n\nexport default Landing;","/home/kali/Desktop/globetrotter_v1/frontend/src/Components/Navbar.js",[],"/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Signup.js",[],"/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Signin.js",["87"],"import React, { useState, useContext } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { UserContext } from '../App'\n\nfunction Signin() {\n\n    const history = useHistory()\n    const { state, dispatch } = useContext(UserContext)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [type, setType] = useState('password')\n\n    const togglePassword = () => {\n        if (type === \"password\") {\n            setType('text')\n        } else {\n            setType('password')\n        }\n    }\n\n    const clicked = () => {\n        fetch('http://localhost:5000/api/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email, password })\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) {\n                    console.log(res.error)\n                }\n                else {\n                    localStorage.setItem('jwt', res.token)\n                    localStorage.setItem('user', JSON.stringify(res.user))\n                    console.log(res)\n                    dispatch({ type: 'USER', payload: res.user })\n                    history.push('/home')\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    const style = {\n        textAlign: 'center',\n        maxWidth: '400px',\n        marginLeft: '20px',\n        borderRadius: '10px',\n        padding: '30px',\n        backgroundColor: '#444',\n        color: 'white'\n    }\n\n    return (\n        <div style={{ display: 'flex', margin: '10px auto', justifyContent: 'center' }}>\n            <div className='card' style={style}>\n                <h2>GlobeTrotter</h2>\n                <h4>Sign In</h4>\n                <input style={{ color: \"white\" }} type=\"text\" placeholder='Enter your Email' value={email} onChange={(e) => setEmail(e.target.value)}></input>\n                <input style={{ color: \"white\" }} type={type} id=\"passwrd\" placeholder='Enter your Password' value={password} onChange={(e) => setPassword(e.target.value)}></input><br /><br />\n                <div style={{ color: 'white' }} onClick={() => togglePassword()}>\n                    Click here to show/hide Password\n                </div>\n                <br></br><br></br>\n                <button onClick={() => clicked()} className=\"waves-effect waves-light btn\">Sign In</button><br /><br />\n                Don't have an account? <br></br>\n                <Link to='/signup'>Sign Up here!</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Signin","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Form.js",["88","89","90","91","92","93"],"import React,{useState,useEffect} from 'react'\nconst StreamrClient = require('streamr-client')\n\nfunction Form(){\n\nconst [coins,setCoins] = useState()\n\nconst STREAM_ID = '0xcedd0024aa729244f33f13348e0bf7601f933fad/test_globetrotter'\nconst API = '206656bcf576be28697407f0b363d85b125bf5dc75baa0a19578aa6797f78064'\n\nconst [name,setName] = useState();\n\n\n\nconst clicked = () => {\n    fetch(\"http://localhost:5000/api/test/coins\", {\n      method: \"POST\",\n      headers: {\n        \"privatekey\" : (JSON.parse(localStorage.getItem('user')).privateKey).toString()\n      }\n    }).then(res => res.json()).then((data) => {\n      console.log(data)\n      setCoins(data.coins)\n    })\n  }\n\n  const withdraw = () => {\n    fetch(\"http://localhost:5000/api/test/withdraw\", {\n      method: \"GET\",\n      headers: {\n        \"privatekey\" : (JSON.parse(localStorage.getItem('user')).privateKey).toString()\n      }\n    })\n  }\n\nreturn(\n    <div>\n      <br></br>\n        <button type=\"submit\" onClick={()=>clicked()}>SHOW EARNINGS</button>\n        <br></br><br></br>\n        DATA COINS : {coins}\n        &nbsp;&nbsp;&nbsp;<button onClick={()=>withdraw()}>WITHDRAW COINS</button>\n    </div>\n)\n\n\n}\n\nexport default Form","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Home.js",["94","95","96"],"import { React, useEffect, useContext, useState } from \"react\";\nimport { UserContext } from \"../App\";\nimport Card from \"../Components/Card\";\n\nfunction Home() {\n  const [dests, setDests] = useState([]);\n  const { state, dispatch } = useContext(UserContext);\n  // const [friendList, setFriendList] = useState([]);\n\n  function getFriendlist() {\n    fetch(\"http://localhost:5000/api/users/friend\", {\n      method: \"GET\",\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n        uid: JSON.parse(localStorage.getItem(\"user\"))._id.toString(),\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        // setFriendList(res);\n        localStorage.setItem(\"friends\", res)\n      })\n      .catch((err) => console.log(err));\n  }\n  useEffect(() => {\n    getFriendlist()\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/posts\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.getItem(\"jwt\"),\n        id: JSON.parse(localStorage.getItem(\"user\"))._id.toString(),\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setDests(res);\n      })\n      .catch((err) => alert(\"somettext\"));\n  }, []);\n\n  console.log()\n  if (dests.length != 0) {\n    return (\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n        {\n          dests.map((d) => {\n            return (\n              <Card\n                key={d._id}\n                user={d.user}\n                fid={d.user._id}\n                destination={d.destination}\n                description={d.description}\n                name={d.user.name}\n                url={d.image_url}\n              />\n            );\n          })\n        }\n      </div >\n\n\n    );\n\n  } else {\n    return (\n      <div className=\"progress\">\n        <div className=\"indeterminate\"></div>\n      </div>\n    )\n  }\n\n\n}\n\nexport default Home;\n","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/PostDestination.js",[],"/home/kali/Desktop/globetrotter_v1/frontend/src/Reducer/UserReducer.js",[],"/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Chat.js",["97","98"],"import React, { useState, useEffect } from 'react'\nimport queryString from 'query-string'\nimport io from 'socket.io-client'\n\nlet socket\n\nfunction Chat({ location }) {\n\n    const [name, setName] = useState('')\n    const [room, setRoom] = useState('')\n    const [message, setMessage] = useState('')\n    const [messages, setMessages] = useState([])\n    const ENDPOINT = 'http://localhost:5000'\n\n    useEffect(() => {\n        const { name, room } = queryString.parse(location.search)\n        socket = io(ENDPOINT)\n        setName(name)\n        setRoom(room)\n\n        socket.emit('join', { name, room })\n\n        return () => {\n            socket.emit('disconnected')\n            socket.off()\n        }\n    }, [ENDPOINT, location.search])\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n            setMessages([...messages, message])\n        })\n    }, [messages])\n\n    const sendMessage = (e) => {\n\n        if (message) {\n            socket.emit('sendMessage', message, () => {\n                setMessage('')\n            })\n        }\n    }\n\n    console.log(message, messages)\n    return (\n        <div>\n            <div className=\"messagesContainer\">\n                {\n                    messages.map((m) => {\n                        return <div>{m.user + \" : \" + m.text}</div>\n                    })\n                }\n            </div>\n            <input type='text' onChange={(e) => setMessage(e.target.value)} />\n            <button type='submit' onClick={(e) => sendMessage(e)}>Send</button>\n        </div>\n    )\n}\n\nexport default Chat\n","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Inbox.js",["99"],"import { React, useState, useEffect } from \"react\";\n\nfunction Inbox() {\n  const [reqId, setreqId] = useState([]);\n\n  const getInbox = () => {\n    fetch(\"http://localhost:5000/api/users/inbox\", {\n      method: \"GET\",\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n        uid: JSON.parse(localStorage.getItem(\"user\"))._id.toString(),\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setreqId(res);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    getInbox();\n  }, []);\n  const onAccept = (frid, val) => {\n    const accepted = val;\n    fetch(\"http://localhost:5000/api/users/inbox/request\", {\n      method: \"PUT\",\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n        accepted: accepted,\n        uid: JSON.parse(localStorage.getItem(\"user\"))._id.toString(),\n        frid: frid,\n      },\n    })\n      .then(res => res.json())\n      .then(res => { alert(res.msg) })\n      .then(() => {\n        getInbox();\n      })\n      .catch((err) => console.log(err));\n  };\n\n\n  // const loader = () => {\n  //   return (\n  //     <div className=\"progress\">\n  //       <div className=\"indeterminate\"></div>\n  //     </div>\n  //   )\n  // }\n\n  if (reqId.length != 0) {\n\n    return (\n      <div>\n        <div>\n          <h2>\n            This is Inbox\n            <hr></hr>\n          </h2>\n        </div>\n\n        {reqId.map((d) => {\n          return (\n            <div key={d.split(\";\")[0]}>\n              <div className=\"card hoverable\" style={{ margin: \"20px\", maxWidth: \"700px\", height: \"110px\" }}>\n                <div className=\"card-image\" style={{ paddingLeft: \"20px\" }}>\n                  <img src={'https://robohash.org/' + d.split(\";\")[1]} style={{ width: '50px', height: \"50px\", borderRadius: \"100%\" }}\n                    alt=\"destinationpostedbyyou\" />\n                </div>\n\n                <div style={{ fontSize: \"18px\", marginLeft: \"30px\" }}>{d.split(\";\")[1]}</div>\n                <button value=\"true\" style={{ marginLeft: \"15px\" }} onClick={() => onAccept(d.split(\";\")[0], \"true\")}>\n                  ACCEPT\n              </button>\n                <button value=\"reject\" style={{ marginLeft: \"5px\" }} onClick={() => onAccept(d.split(\";\")[0], \"false\")} > REJECT</button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else {\n    return (\n      [<div className=\"progress\">\n        <div className=\"indeterminate\"></div>\n      </div>, <h2>Empty Inbox</h2>]\n    )\n  }\n}\n\nexport default Inbox;\n","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Friends.js",["100"],"import { React, useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom'\n\nfunction Friends() {\n  const [friendList, setFriendList] = useState([]);\n  const [room, setRoom] = useState('');\n\n  function getFriendlist() {\n    fetch(\"http://localhost:5000/api/users/friend\", {\n      method: \"GET\",\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n        uid: JSON.parse(localStorage.getItem(\"user\"))._id.toString(),\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        // console.log(res[0].split(\";\")[0])\n        setFriendList(res);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  const unfriend = (frid) => {\n    fetch(\"http://localhost:5000/api/users/unfriend\", {\n      method: \"PUT\",\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n        \"uid\": JSON.parse(localStorage.getItem(\"user\"))._id.toString(),\n        \"frid\": frid\n      },\n    })\n      .then((res) => res.json())\n      .then(res => {\n        alert(res.msg)\n        getFriendlist()\n      })\n      .catch((err) => console.log(err));\n  }\n\n  useEffect(() => {\n    getFriendlist()\n  }, []);\n\n  if (friendList.length != 0) {\n\n    return (\n      <div>\n        <div>\n          <h2>\n            This is Friend list :)\n          <hr></hr>\n          </h2>\n        </div>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n\n\n          {friendList.map((f) => {\n            return (\n              <div key={f.split(\";\")[0]}>\n                <div className=\"card hoverable\" style={{ margin: \"20px\", maxWidth: \"700px\" }}>\n                  <div className=\"card-image\">\n                    <img src={'https://robohash.org/' + f.split(\";\")[1]} style={{ width: '150px', height: \"150px\", borderRadius: \"100%\" }}\n                      alt=\"destinationpostedbyyou\" />\n                  </div>\n                  <div className=\"card-title\" style={{ color: \"black\", marginLeft: \"30px\" }}><p>{f.split(\";\")[1]}</p>\n                  </div>\n                  <div className=\"card-content\">\n                    <button value=\"unfriend\" onClick={() => unfriend(f.split(\";\")[0])}>UNFRIEND</button>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <h5 style={{marginLeft:\"25px\"}}> Create/Join Room</h5>\n        <input type='text' style={{maxWidth:\"500px\", color:\"black\", marginLeft:\"30px\"}} placeholder=\"Create/Join Room\" onChange={(e) => setRoom(e.target.value)} />\n        <Link to={`/chat?name=${JSON.parse(localStorage.getItem('user')).name}&room=${room}`}>\n          <button value=\"chat\">Join Chat</button>\n        </Link>\n      </div >\n    );\n  }\n  else {\n    return (\n      [<div className=\"progress\">\n        <div className=\"indeterminate\"></div>\n      </div>, <h2>No Friends :(</h2>]\n    )\n  }\n\n}\n\nexport default Friends;\n","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/Profile.js",["101"],"import { React, useEffect, useState } from 'react'\nimport Card from \"../Components/Card\";\nimport \"../Components/styles/center.css\"\nfunction Profile() {\n  const [name, setName] = useState('')\n  const [type, setType] = useState('')\n  const [avatar, setAvatar] = useState('')\n  const [email, setEmail] = useState('')\n  const [coins, setCoins] = useState()\n  const [myPosts, setMyPosts] = useState([])\n\n  useEffect(() => {\n    const ac = new AbortController();\n    fetch('http://localhost:5000/api/users/me', {\n      method: \"GET\",\n      headers: {\n        \"x-auth-token\": localStorage.getItem('jwt'),\n        \"Content-Type\": \"application/json\",\n        \"id\": (JSON.parse(localStorage.getItem('user'))._id).toString()\n      }\n    }).then(res => res.json())\n      .then(res => {\n        setAvatar(res[0].avatar);\n        setName(res[0].name);\n        setEmail(res[0].email);\n        setType(res[0].accountType);\n      })\n      .catch(err => console.log(err))\n    return () => ac.abort();\n  }, [])\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/posts/me\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.getItem(\"jwt\"),\n        id: JSON.parse(localStorage.getItem(\"user\"))._id.toString(),\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setMyPosts(res);\n        console.log(res)\n      })\n      .catch((err) => alert(\"somettext\"));\n  }, []);\n\n  const clicked = () => {\n    fetch(\"http://localhost:5000/api/test/coins\", {\n      method: \"POST\",\n      headers: {\n        \"privatekey\": (JSON.parse(localStorage.getItem('user')).privateKey).toString()\n      }\n    }).then(res => res.json()).then((data) => {\n      console.log(data)\n      setCoins(data.coins)\n    })\n  }\n\n  const withdraw = () => {\n    fetch(\"http://localhost:5000/api/test/withdraw\", {\n      method: \"GET\",\n      headers: {\n        \"privatekey\": (JSON.parse(localStorage.getItem('user')).privateKey).toString()\n      }\n    })\n  }\n\n  const jumbotronStyle = {\n    paddingBottom: '150px',\n    boxShadow: \"0px 0px 0px 0px rgba(0,0,0,0)\"\n  }\n  if (avatar) {\n    return (\n      <div>\n        <div className=\"card-panel grey lighten-3\" style={jumbotronStyle}>\n          <div className=\"container\">\n\n            <img src={avatar} alt=\"user\" />\n            <h1>{name}</h1>\n            <h4>{type} | {email} </h4>\n          </div>\n        </div>\n        <div>\n          <br></br>\n          <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n\n            {\n              myPosts.map((d) => {\n\n                return (\n                  <div className=\"card hoverable\" style={{ margin: \"20px\", maxWidth: \"700px\" }}>\n                    <div className=\"card-image\">\n                      <img src={d.image_url} style={{ width: '400px', height: \"300px\" }}\n                        alt=\"destinationpostedbyyou\" />\n                      <span className=\"card-title\"><strong>{d.destination}</strong>\n                      </span>\n                    </div>\n                    <div className=\"card-content\" style={{ maxWidth: \"400px\" }}>\n                      <p>{d.description}</p>\n                    </div>\n                  </div>\n                )\n              })\n            }\n          </div>\n\n          <div className=\"wallet\">\n            <h4>YOUR EARNINGS : {coins}</h4>\n            <button type=\"submit\" onClick={() => clicked()}>SHOW EARNINGS</button>\n            <button onClick={() => withdraw()}>WITHDRAW COINS</button>\n          </div>\n        </div>\n      </div >\n    )\n  }\n  else {\n    return (\n      <div className=\"progress\">\n        <div className=\"indeterminate\"></div>\n      </div>\n    )\n  }\n\n}\n\nexport default Profile\n","/home/kali/Desktop/globetrotter_v1/frontend/src/Screens/UserDetails.js",[],"/home/kali/Desktop/globetrotter_v1/frontend/src/Components/Card.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":30,"column":6,"nodeType":"108","endLine":30,"endColumn":8,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":7,"column":7,"nodeType":"112","messageId":"113","endLine":7,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":15,"column":13,"nodeType":"116","endLine":15,"endColumn":73},{"ruleId":"114","severity":1,"message":"115","line":17,"column":17,"nodeType":"116","endLine":17,"endColumn":58},{"ruleId":"114","severity":1,"message":"115","line":18,"column":17,"nodeType":"116","endLine":18,"endColumn":77},{"ruleId":"110","severity":1,"message":"117","line":8,"column":13,"nodeType":"112","messageId":"113","endLine":8,"endColumn":18},{"ruleId":"110","severity":1,"message":"118","line":1,"column":24,"nodeType":"112","messageId":"113","endLine":1,"endColumn":33},{"ruleId":"110","severity":1,"message":"119","line":2,"column":7,"nodeType":"112","messageId":"113","endLine":2,"endColumn":20},{"ruleId":"110","severity":1,"message":"120","line":8,"column":7,"nodeType":"112","messageId":"113","endLine":8,"endColumn":16},{"ruleId":"110","severity":1,"message":"121","line":9,"column":7,"nodeType":"112","messageId":"113","endLine":9,"endColumn":10},{"ruleId":"110","severity":1,"message":"122","line":11,"column":8,"nodeType":"112","messageId":"113","endLine":11,"endColumn":12},{"ruleId":"110","severity":1,"message":"123","line":11,"column":13,"nodeType":"112","messageId":"113","endLine":11,"endColumn":20},{"ruleId":"110","severity":1,"message":"117","line":7,"column":11,"nodeType":"112","messageId":"113","endLine":7,"endColumn":16},{"ruleId":"110","severity":1,"message":"124","line":7,"column":18,"nodeType":"112","messageId":"113","endLine":7,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":46,"column":20,"nodeType":"127","messageId":"128","endLine":46,"endColumn":22},{"ruleId":"110","severity":1,"message":"122","line":9,"column":12,"nodeType":"112","messageId":"113","endLine":9,"endColumn":16},{"ruleId":"110","severity":1,"message":"129","line":10,"column":12,"nodeType":"112","messageId":"113","endLine":10,"endColumn":16},{"ruleId":"125","severity":1,"message":"126","line":54,"column":20,"nodeType":"127","messageId":"128","endLine":54,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":47,"column":25,"nodeType":"127","messageId":"128","endLine":47,"endColumn":27},{"ruleId":"110","severity":1,"message":"130","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":12},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["133"],"no-unused-vars","'jumbotronStyle' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'state' is assigned a value but never used.","'useEffect' is defined but never used.","'StreamrClient' is assigned a value but never used.","'STREAM_ID' is assigned a value but never used.","'API' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'room' is assigned a value but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},"Update the dependencies array to be: [dispatch, history]",{"range":"136","text":"137"},[1063,1065],"[dispatch, history]"]